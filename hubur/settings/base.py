"""
Django settings for hubur project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import datetime
from pathlib import Path
import os
from django.urls import reverse_lazy
from dotenv import load_dotenv

# ==================================================Base directory==================================================
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent.parent
TEMPLATES_DIR = os.path.join(BASE_DIR, 'hubur_cms/templates')
AUTH_USER_MODEL = 'hubur_apis.UserProfile'

#==================================================Environment====================================================
load_dotenv()

envPath = os.path.join(BASE_DIR, 'variables.env')
load_dotenv(dotenv_path=envPath)

# ==================================================Secret key==================================================

SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# ==================================================Data upload limit==================================================
DATA_UPLOAD_MAX_MEMORY_SIZE = int(os.getenv("DATA_UPLOAD_MAX_MEMORY_SIZE"))

# ==================================================Application definition==================================================

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'hubur_apis',
    'hubur_cms',
    'rest_framework',
    'drf_yasg',
    'django_filters',
    'django_crontab',
    'corsheaders',
    'push_notifications'
]


#==================================================Middlewares==================================================

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware"
]

# ==================================================Base Url configuration==================================================
LOGIN_URL = reverse_lazy('login_url')
LOGIN_REDIRECT_URL = reverse_lazy('home')
LOGOUT_REDIRECT_URL = reverse_lazy('login_url')
ROOT_URLCONF = 'hubur.urls'

# ==================================================Templates Configuration==================================================

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = "hubur.wsgi.application"

# ==================================================Authentication settings==================================================

AUTHENTICATION_BACKENDS = [
    'hubur_apis.AuthenticateBackend.EmailModelBackend',
]

# ==================================================Password validation==================================================

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# ==================================================Internationalization==================================================

USE_I18N = True
USE_L10N = True
USE_TZ = True

STATIC_URL = '/static/'


# ==================================================Logging Configurations==================================================

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'null': {
            'class': 'logging.NullHandler',
        },
    },
    'loggers': {
        # Don't send invalid host error messages to ADMINS.
        'django.security.DisallowedHost': {
            'handlers': ['null'],
            'propagate': False,
        },
    }
}

ASGI_THREADS = 1000

# ==================================================Rest Framework Settings==================================================

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ]
}

JWT_AUTH = {
    'JWT_VERIFY_EXPIRATION':False,
    'JWT_ALLOW_REFRESH': True,
}

PASSWORD_RESET_TIMEOUT = 300


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ==================================================CORS Settings==================================================

CORS_ORIGIN_ALLOW_ALL = True

CORS_ORIGIN_WHITELIST = [
    'https://localhost:3000'
]

# ==================================================Push notification settings==================================================

PUSH_NOTIFICATIONS_SETTINGS = {
    "FCM_API_KEY": os.getenv("FCM_API_KEY"),
    "APNS_CERTIFICATE": os.path.join(BASE_DIR, "keys/huburway_p12_Certificates.p12"),
    "APNS_TOPIC": os.getenv("APNS_TOPIC"),
    "WP_PRIVATE_KEY": os.path.join(BASE_DIR, "keys/private_key.pem"),
    "WP_CLAIMS": {'sub': "mailto: shahnawazmemon78@gmail.com"},
    "UPDATE_ON_DUPLICATE_REG_ID": True
}

#==================================================SMS settings=================================================

TWILLIO_ACCOUNT_SID = os.getenv("TWILLIO_ACCOUNT_SID")
TWILLIO_AUTH_TOKEN = os.getenv("TWILLIO_AUTH_TOKEN")
TWILLIO_NUMBER = os.getenv("TWILLIO_NUMBER")

#==================================================Web Push Settings=================================================
SERVER_KEY = os.getenv("SERVER_KEY")

#==================================================Socket Host=================================================
SOCKET_HOST = os.getenv("SOCKET_HOST")